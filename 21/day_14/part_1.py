print((lambda r:lambda i,P,C,M:r(r,i,P,C,M))(lambda s,i,P,C,M:s(s,i+1,[P,P.append(dict((k,0) for k in P[-1].keys())),[[C.__setitem__(M[k],C[M[k]]+v),P[-1].__setitem__(k[0]+M[k],P[-1][k[0]+M[k]]+v),P[-1].__setitem__(M[k]+k[1],P[-1][M[k]+k[1]]+v)] for k,v in P[-2].items()]][0],C,M) if i<10 else max(C.values())-min(C.values()))(0,*(lambda T,M,P,C:([P,[[P[0].__setitem__(k[0]+v,0),P[0].__setitem__(v+k[1],0),C.__setitem__(k[0],0),C.__setitem__(k[1],0),C.__setitem__(v,0)] for k,v in M.items()],[P[0].__setitem__(l+r,P[0].get(l+r,0)+1) for l,r in zip(T[:-1],T[1:])]][0],[C,[C.__setitem__(c,T.count(c)) for c in set(T)]][0],M))(*(lambda f:("".join(f.readline().strip() for _ in range(2)),dict([[(a,b.strip()) for a,b in [tuple(l.split(" -> "))]][0] for l in f if l])))(open("input")),[dict()],dict())))